--------------------------------------------------------------------------------------------------------------Title
How do I Report a BUG?
--------------------------------------------------------------------------------------------------------------Answer

Well, if you don't find anything that helps you, please check if it is a known BUG, if it is not, please, report it.<br>
The place to search and report BUGS is <a href="http://sourceforge.net/tracker/?group_id=85796&atid=577329">here</a><br>
When reporting a bug, don't forget to give the following information:<br><br>
- System (e.g windows XP)<br>
- Eclipse version (e.g. 3.5)<br>
- Pydev version (e.g. 1.4.7)<br>
- Pydev error log (if any): go to window->show view->other->PDE Runtime->Error log. (if you have the SDK installed, otherwise,
you have to find the log file at your_workspace/.metadata/.log)<br>
- Eclipse install location (e.g. D:\eclipse_3\352\eclipse)<br>
- Project location where the bug appears (e.g. D:\eclipse\workspace\my project)<br>
<br>
NOTE: the <A href="http://sourceforge.net/forum/forum.php?forum_id=293649">Users Forum</A> may be used for
some doubts, but if you have a bug, that's not the place to go (even though, it might be useful searching it to
see if what you have is not really a bug or if someone has already asked about it).
<br><br>

--------------------------------------------------------------------------------------------------------------Title
How do I Report a Feature Request?
--------------------------------------------------------------------------------------------------------------Answer

Do it <a href="http://sourceforge.net/tracker/?group_id=85796&atid=577332">here (feature tracker at sourceforge)</a>

--------------------------------------------------------------------------------------------------------------Title
I have some doubt I couldn't find in the FAQ, what do I do?
--------------------------------------------------------------------------------------------------------------Answer

You can check the <A href="http://sourceforge.net/forum/forum.php?forum_id=293649">Users Forum</A> for some doubts,
but please, try to find what you're looking for in the homepage first.

--------------------------------------------------------------------------------------------------------------Title
Can I have Eclipse installed anywhere to use Pydev?
--------------------------------------------------------------------------------------------------------------Answer

Yes (note that some previous versions had a bug in which it didn't work if the Eclipse installation had spaces in the path).


--------------------------------------------------------------------------------------------------------------Title
How do I get started with Pydev?
--------------------------------------------------------------------------------------------------------------Answer

Check the getting started manual at: <a href="http://fabioz.com/pydev/manual_101_root.html">http://fabioz.com/pydev/manual_101_root.html</a>

TODO: Add reference to videos.

--------------------------------------------------------------------------------------------------------------Title
How do I configure my PYTHONPATH?
--------------------------------------------------------------------------------------------------------------Answer

Please refer to the Getting Started Guide at 
<a href="http://www.fabioz.com/pydev/manual_101_root.html">http://www.fabioz.com/pydev/manual_101_root.html</a>
for up-to-date information on how to correctly install and configure your PYTHONPATH.


<br><br>


--------------------------------------------------------------------------------------------------------------Title
How do I configure Pydev to use JYTHON?
--------------------------------------------------------------------------------------------------------------Answer
Well, Jython configuration is pretty much the same configuration used for Python. The main difference is that
ALL additional jars you configure in a project must also be on your global PYTHONPATH. This is because of a bug 
that makes Jython unable to get class definitions just defined in the sys.path and not in the classpath
(you may have problems with code-completion if you don't do that). <br/><br/>

This has already been reported as a Jython bug, and if you want more information on it, 
you can check at the following mailing thread: 
<a href="http://sourceforge.net/mailarchive/forum.php?thread_id=7986001&forum_id=5586">mail thread</a> <br/><br/>

--------------------------------------------------------------------------------------------------------------Title
How do I configure Pydev to use IronPython?
--------------------------------------------------------------------------------------------------------------Answer

TODO: Update this

--------------------------------------------------------------------------------------------------------------Title
How do I reference Java projects with Jython?
--------------------------------------------------------------------------------------------------------------Answer
Actually, Java projects cannot be directly referenced. You have to add the pydev nature to the java project and
add your java output class folders to the project source folders, and only then add it as a project reference. <br/><br/>

(to add the nature to a project, you have to open a python file within it with pydev).<br/><br/>

Check the question: "How do I configure my PYTHONPATH?" for information on how to add source folders to the project
pythonpath.

TODO: Add better answer.


--------------------------------------------------------------------------------------------------------------Title
When I do a code-completion, Pydev hangs, what can I do?
--------------------------------------------------------------------------------------------------------------Answer
Pydev does most of its things in the java side, but some information can only be gotten from the python side
(mainly builtins), so, in order to get that info, pydev creates a shell and communicates with it through sockets.<br/><br/>

It depends upon the "Timeout to connect to shell" in the code-completion preferences 
(window > preferences > Pydev > Code completion)<br/><br/>

The first thing to try is to raise that timeout if it does not connect in the first attempt. If that does not
help, the problem might be a firewall that is blocking the communication between pydev and the shell. If that is
still not the problem, please report a bug (also, check if there is anything on the error log (window > show view >
PDE Runtime > Error log) and on the eclipse '.log', which is located at the .metadata folder of the workspace location.<br/><br/>

Note: versions before 0.9.8.6 did have a lock condition problem that happened in a few installations <br/>


--------------------------------------------------------------------------------------------------------------Title
Why raw_input() / input() does not work correctly in pydev?
--------------------------------------------------------------------------------------------------------------Answer
The eclipse console is not an exact copy of a shell... one of the changes is that when you press &lt;ENTER&gt; in a shell, it may
give you a <strong>\r, \n</strong> or <strong>\r\n</strong> as an end-line char, depending on your platform. 
Python does not expect this -- from the docs it says that it will remove the last <strong>\n</strong> (checked in version 2.4), 
but, in some platforms that will leave a <strong>\r</strong> there.

This means that the <strong>raw_input()</strong> should usually be used as <strong>raw_input().replace('\r', '')</strong>, 
and <strong>input()</strong> should be changed for: <strong>eval(raw_input().replace('\r', ''))</strong>.


--------------------------------------------------------------------------------------------------------------Title
My todo-tasks are not showing, is there something wrong?
--------------------------------------------------------------------------------------------------------------Answer
Check the <a href="tasks.html">tasks</a> page for info on tasks.


--------------------------------------------------------------------------------------------------------------Title
Some keybindings Ctrl+[0-9] don't work under Ubuntu. What can I do about it?
--------------------------------------------------------------------------------------------------------------Answer
That's a known bug in Eclipse. You can see more details on and vote for it if you want it fixed at:
<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=179628">https://bugs.eclipse.org/bugs/show_bug.cgi?id=179628</a>
<br/>
<br/>
And details at the pydev bugtracker:
<a href="https://sourceforge.net/tracker/index.php?func=detail&aid=1595998&group_id=85796&atid=577329">https://sourceforge.net/tracker/index.php?func=detail&aid=1595998&group_id=85796&atid=577329</a>
<br/><br/>
Basically, Ctrl+[0-9] does not work if a Ctrl+Shift+[0-9] is also set.
<br/><br/>
The proposed workaround until this is fixed is using Ctrl+/ and Ctrl+\ for comment/uncomment -- which are set 
by default, and changing Ctrl+Shift+4 to Ctrl+6 -- or removing it altogether if you don't use it.



--------------------------------------------------------------------------------------------------------------Title
Variables view doesn't show letters in GNU/Linux (while debugging)
--------------------------------------------------------------------------------------------------------------Answer

Aparently, this bug is related only to GNOME (and no fix is provided for it).<br/><br/>

The good news is there is a work around. In gnome font prefs, set your DPI to less that 76. it works on the fly. <br/><br/>

This bug is closed in the pydev bugtracker, but the bug was added on other places such as gnome and eclipse. The pydev
bug that points to those (and where this thread took place is
<a href="http://sourceforge.net/tracker/index.php?func=detail&aid=1286315&group_id=85796&atid=577329"> HERE </a>)

--------------------------------------------------------------------------------------------------------------Title
I have a library installed and Pydev does not find it
--------------------------------------------------------------------------------------------------------------Answer
Well, problems have been reported on Mac and Linux, and the main reason seems to be symlinks. Pydev will
only find extensions that are 'really' below the python install directory. This happens because the 'less
common denominator', which in this case is windows, does not have symlinks. A workaround to this problem includes
manually adding the given folder installation to the pythonpath or changing the installation of the package to
be under the site-packages folder.


--------------------------------------------------------------------------------------------------------------Title
What is that 'Forced builtin libs' in the Python Interpreters preferences?
--------------------------------------------------------------------------------------------------------------Answer
Well, some libraries once installed do not really show in code completion because they do
not have a corresponding module (such as __builtin__ and datetime) or they do have a 
corresponding module but it cannot be really used in code completion because most of
its information is only gotten at runtime (such as sys and os), so, in order for code completion
to get its information, you have to manually add it to those libs (and by doing so, its information
is gotten with a python shell).
<br><br>



--------------------------------------------------------------------------------------------------------------Title
How do I configure a python shell for experimenting with Python?
--------------------------------------------------------------------------------------------------------------Answer
Well, for that, you have to configure an external tool.
Go to the menu->Run->External Tools and configure the location, working dir and don't forget to put the
-i argument so that you enter in interactive mode! <br/><br/>
The picture below shows what I mean...<br/><br/>
<IMG src="images/faq/conf_python_external.png" border="1" >

<br>
<br>
Now, the only thing missing is running it! And don't forget to add a keybinding to rerun the last executed external
tool, so that you don't have to go through the menu every time!
<br>
<br>




--------------------------------------------------------------------------------------------------------------Title
The Pydev builder is taking too much of my time, what can I do about it?
--------------------------------------------------------------------------------------------------------------Answer
Well, if you have PyLint active, you can disable it, as it is the process that takes most time when building.<br>
Another alternative is disabling the builder altoghether. To do it you can go to window->preferences->pydev->builder 
and disable it. <br>
NOTE: Disabling the builders may have many side-effects, such as code completion not working, pylint, tasks, etc. So,
if you really want it, you can disable it, but do it with care.
<br><br>






--------------------------------------------------------------------------------------------------------------Title
Why the Pydev properties do not show?
--------------------------------------------------------------------------------------------------------------Answer

Probably you are in the JAVA package explorer or something similar. You have to use the default navigator so
that it shows its properties.<br>
Also note that you have to open a python file with Pydev in the project before it appears in the properties too 
(the project python nature appears only after you do that).<br><br>






--------------------------------------------------------------------------------------------------------------Title
I can see no new Python project, how am I supposed to use Pydev?
--------------------------------------------------------------------------------------------------------------Answer

<strong>UPDATE</strong>: As of version 0.9.8.6, a new 'Pydev Project' was introduced, so, you can already
use the 'new Pydev project' (but the way described below will still work).
<br/>
<br/>
Well, you basically have to do a simple project and use create simple file / folder to create python modules.<br>
<br>
You may also have to associate the *.py with the Pydev editor (even though that is probably automatic).<br>
Anyway, if you need it, go to window->preferences->workbench->file associations and associate *.py with Pydev.<br><br>
p.s. Don't forget to put it into both of your PYTHONPATHs (enviroment and in the project properties).
<br><br>







--------------------------------------------------------------------------------------------------------------Title
How do I run a module from within eclipse using Pydev (either Python or Jython)? 
--------------------------------------------------------------------------------------------------------------Answer
To do that, the easiest way is going to the Run menu (Run->Run As->Python or Jython). If it is not available in your current
eclipse perspective, you can enable it by going to window->customize perspective->commands and checking the "Lauch" item
(in this way, you can go only with the keyboard).<br><br>
Another way to run a module is right clicking the module in the navigator and choosing python->run (when a .py file is selected).


--------------------------------------------------------------------------------------------------------------Title
How do I know which is the command-line and PYTHONPATH used to make a python or jython run? 
--------------------------------------------------------------------------------------------------------------Answer
If you are in doubt what is actually being passed to the run, you can go to the run menu (Run > Run...) and on
the given run (python or jython), click on 'See resulting command-line for the given parameters' and check the command-line,
as well as the PYTHONPATH that will be used for the run.


--------------------------------------------------------------------------------------------------------------Title
Code completion is not working correctly for some library 
--------------------------------------------------------------------------------------------------------------Answer
Well, code completion works by default by analyzing the source code, but, sometimes, most information is
only really available at runtime (the os module and wxPython are good examples here). So, you can specify
that you want to treat those as builtin libraries. For that, go to the python interpreters and add it as 
a 'forced builtin lib'. More information may be found at the faq: <br/>
<br/>
'What is that 'Forced builtin libs' in the Python Interpreters preferences?'


--------------------------------------------------------------------------------------------------------------Title
I can't make __builtins__.xxx = something while debugging
--------------------------------------------------------------------------------------------------------------Answer
The problem is that pydev passes a dict as the __builtins__ module to execfile while debugging (so, regular
attribute access is not available on that object).<br><br>
<br>
Simply use:<br>
import __builtin__<br>
__builtin__.xxx = something<br>
<br>
It's basically the same thing, but works when debugging.


--------------------------------------------------------------------------------------------------------------Title
PyLint is not working, what should I do?
--------------------------------------------------------------------------------------------------------------Answer
1. make sure that PyLint is correctly installed in your site-packages (try running it at least once
on a command-line to make sure your installation is correct). <br/>
<br/>
2. Check if your project and your pythonpath are correctly configured 
-- pylint is only passed in files in the pythonpath for a project, so if any of those are not well configured,
pylint won't work correctly.<br/>
<br/>
3. If your installation is all ok, try reading the <a href="pylint.html">Pylint</a> provided page to see if it is
corretly configured in the eclipse side.<br/>
<br/>
4. If everything fails, you can ask in the forum or submit a bug report for it (don't forget to add the following
information: pylint installation path, pylint version and the other information requested on the 
'How do I Report a BUG?' faq.

--------------------------------------------------------------------------------------------------------------Title
I have a CORBA program and I cannot debug its methods, what can I do?
--------------------------------------------------------------------------------------------------------------Answer
Thanks for Petru Lauric for the following explanation:<br/><br/>

The ORB I use (omniORB) creates its own worker threads inside the python world, whenever a
python function is called via CORBA. These threads are not created by using
the 'threading' module so the pydev debugger's trace function is not automatically
set for the ORB worker threads.<br/><br/>

The solution is to explicitly set the trace function for the ORB threads.<br/><br/>

1)  Open folder [eclipse sdk path]\plugins\org.python.pydev.debug_0.9.8.4\pysrc(or similar)<br/><br/>

2) Remove file pydevd.pyc, make a backup copy of file pydevd.py and make this
change to the PyDB::run() method from file pydevd.py:<br/><br/>
 ...<br/>
 if globals is None:<br/>
 ...<br/>
 globals = m.__dict__<br/>
<br/>
 # <begin change><br/>
 # Hack: keep a reference to the pydev debugger's<br/>
 # trace function in a global variable. This can<br/>
 # be used by the debugged script to set up the<br/>
 # trace function for the ORB worker threads.<br/>
 #<br/>
 globals['pydev_hook'] = self.trace_dispatch<br/>
<br/>
 # <end change><br/>
 ...<br/>
<br/>
3) Make changes similar to those below to your python app.<br/><br/>

Note 1: the "pydev_hook" global variable will *only* exist in the global namespace
of the "main" module of your app (the script launched by pydev when you debug
your app). Feel free to pass it as an argument to functions from other modules,
if that's where you need to use it.<br/><br/>

Note 2: the trace function for the ORB worker threads MUST be set before the
ORB creates the first worker thread.<br/><br/>

a) import this undocumented ORB function<br/>
from omniORB import addWThreadHook<br/>

b)add this function<br/><br/>

def dbg_trace(flag=0, wt=None):<br/>
 """This function is called whenever the ORB
    creates a worker thread (i.e. when a client
    calls a CORBA interface of the engine).
    The ORB worker threads are not created with
    the functions from the 'threading' module so,
    if we want to debug them with pydev, we need
    to "manually" set the trace function for
    them."""<br/>
 if flag == 0: # WTHREAD_CREATED<br/>
 sys.settrace(pydev_trace_func)<br/><br/>

c) finally, make these changes<br/><br/>

try:<br/>
 # check if pydev_hook is defined<br/>
 hook = pydev_hook<br/>
except:<br/>
 hook = None<br/>

if hook is not None:<br/>
 # keep a copy of the pydev_hook in a global<br/>
 # variable, so that dbg_trace() can find it later<br/>
 # on<br/>
 global pydev_trace_func<br/>
 pydev_trace_func = pydev_hook<br/><br/>

 # NOTE: the ORB will call dbg_trace each time it<br/>
 # creates a worker thread. The function below<br/>
 # MUST be used *before* the ORB creates the first<br/>
 # worker thread.<br/>
 addWThreadHook(dbg_trace)<br/><br/>

I hope this helps.<br/><br/>

Regards,<br/>
Petru Lauric<br/>

--------------------------------------------------------------------------------------------------------------Title
OK, I know that many features are available, but I just don't know how can I access them through my keyboard!!
--------------------------------------------------------------------------------------------------------------Answer

Please refer to: <a href="http://www.fabioz.com/pydev/manual_adv_keybindings.html">http://www.fabioz.com/pydev/manual_adv_keybindings.html</a>
for up-to-date info on the most useful keybindings provided by Pydev and Eclipse.

<br><br>

--------------------------------------------------------------------------------------------------------------Title
How do I uninstall Pydev
--------------------------------------------------------------------------------------------------------------Answer

To uninstall you should either go on and remove the org.python.pydev* from eclipse/plugins and eclipse/features or 
you can go to help > software updates > manage configuration, choose the Pydev plugin and disable it (after that, 
to completely remove it, you must restart Eclipse and only then select it for uninstall). Note that this process
is the same for any Eclipse plugin.

<br><br>





