

<h3>What is PyDev?</h3>

PyDev is a plugin that enables users to use <strong>Eclipse</strong> for <strong>Python</strong> and <strong>Jython</strong> development 
-- making Eclipse a first class <strong>Python IDE</strong> --
It comes with many goodies such as code completion, syntax highlighting, syntax analysis, 
refactor, debug and many others. If you want more details on
the provided features, you can check <strong><a href="features.html">here</a></strong>.

<br/>
<br/>
<br/>
<h3><a href="http://www.fabioz.com/pydev"><IMG src="images/sponsors/extensions2.gif" border="1" /></a></h3>

<strong><a href="http://www.fabioz.com/pydev">Pydev Extensions</a></strong>
is a plugin that works with PyDev, providing many other features such as <strong>code-analysis</strong>, 
<strong>code completion with auto-import</strong>, a much better implementation of <strong>go to definition, 
remote debugging, 'quick-fixes', mark-occurrences</strong>, among others.<br/><br/>

If you want more details, check the <a href="http://www.fabioz.com/pydev">Pydev Extensions homepage</a><br/>
<br/>
<br/>
<br/>

<hr/>
<h2>News: </h2>



<h3>New Release: LAST_VERSION_TAG</h3>
<ul>
<li>Packaging problem solved.</li>
</ul>

<h3>New Release: 1.2.8</h3>
<h4>Major highlights:</h4>

<ul>
<li><strong>Refactoring</strong>: integration of the <a href="http://sifsstud2.hsr.ch/peptic">PEPTIC refactoring engine</a></li>
<li><strong>Package Explorer</strong>: many fixes (special thanks for Don Taylor for the bug reports)</li>
<li><strong>Debugger</strong>: a number of small optimizations</li>
<li><strong>Code-completion</strong>: works in emacs mode</li>
<li><strong>Code-completion</strong>: added the possibility of auto-completing for all letter chars and '_' (so, it starts completing once you start writing)</li>
<li><strong>Code-completion</strong>: code-completion for epydoc inside strings</li>
<li><strong>Code-completion</strong>: assigns after global statement considered added to the global namespace</li>
<li><strong>Code-completion</strong>: now works when a class is declared in a nested scope</li>
<li><strong>Code-completion</strong>: if multiple assigns are found to some variable, the completion will be a merge of them</li>
<li><strong>Code-completion</strong>: functions are analyzed for their return values for code-completion purposes</li>
<li><strong>Code-completion</strong>: working on multi-line imports</li>
<li><strong>Code-completion</strong>: can discover instance variables not declared in the class (in the scope where the class was instanced)</li>
<li><strong>Auto-edit</strong>: adds 'self', 'cls' or no parameter based on the @clasmethod, @staticmethod declaration on previous line</li>
<li><strong>Auto-edit</strong>: doesn't add 'self' if a method is declared in a method inner scope</li>
<li><strong>Fix: BRM Refactoring</strong>: wrong column was being passed to the BRM refactoring engine</li>
<li><strong>Code-folding</strong>: added for comments and strings</li>
<li><strong>Fix</strong>: sometimes the 'create docstring' assistant was not recognizing method definitons</li>
</ul>


<h4>Previous version highlights: 1.2.7</h4>

<ul>
<li><strong>Debugger</strong>: change value implemented</li>
<li><strong>Pydev Package Explorer</strong>: Default actions (copy, paste, rename, etc) reimplemented (see <a href="http://pydev.blogspot.com/2006/12/package-explorer-status-for-pydev.html">blog</a> to see what this fixed)</li>
<li><strong>Block Comments</strong>: The remove block comments (Ctrl+5) will now remove contiguous comments -- if several lines are commented, putting the cursor in any of those lines and pressing Ctrl+5 will remove all those comments</li>
<li><strong>Launch</strong>: When creating a new launch, the 'default' option is chosen, so, if the default interpreter changes later, this won't affect existing launch configurations</li>
<li><strong>Code Completion</strong>: 'cls' does not appear as 1st parameter on code completion anymore</li>
<li><strong>Code Completion</strong>: completions for cls on classmethods now works correctly</li>
<li><strong>Keybindings</strong>: Ctrl+Tab and Ctrl+Shift+Tab keybindings removed from convert tabs to space-tabs (and vice-versa) -- they are still available in the source menu</li>
<li><strong>Fix</strong>: the PYTHONPATH passed to <strong>PyLint</strong> was not containing the project PYTHONPATH</li>
<li><strong>Fix</strong>: halting condition on code-completion execution</li>
<li><strong>Fix</strong>: 'create docstrings' assist creates <strong>@param</strong> even if there is a comment in a function definition</li>
<li><strong>Fix</strong>: block comment for class will recognize better when it is on a class definition line</li>
</ul>

<h4>Previous version highlights: 1.2.6</h4>

<ul>
	<li><strong>Pydev package explorer</strong> (Still <strong>BETA</strong>, so, use it with care -- the navigator is still the preferred way of browsing your project)</li>
	<ul>
		<li>Filters for .pyc and .pyo files created</li>
		<li>Working set integration added (just available for Eclipse <strong>3.2.1</strong>)</li>
		<li>Some minor bugs fixed</li>
	</ul>
	<li>Patch by <strong>Olof Wolgast</strong>: The <strong>'create docstrings'</strong> assistant has more options (windows > preferences > pydev > code formatter > docstrings)</li>
	<ul>
		<li>Option to choose between <strong>single and double quotes</strong></li>
		<li>Option to <strong>create '@type'</strong> too and not only '@param'</li>
		<li>Option to <strong>skip creation of the @type</strong> tag for parameters starting with some prefix (if 'Custom' is chosen)</li>
	</ul>
	<li><strong>Block comments</strong> now have more options (windows > preferences > pydev > code formatter > block comments)</li>
	<ul>
		<li>Option to <strong>align single-line block comment to the left or right</strong></li>
		<li>Option to put class name above class if applied on a class definition</li>
	</ul>
	<li><strong>Fix</strong>: Multi-line Templates indent correctly</li>
	<li><strong>Fix</strong>: When a file from a project that was deleted was still opened inside pydev, Eclipse would not start-up correctly</li>
	<li><strong>Fix</strong>: When a different interpreter is chosen in the run dialog, the pythonpath is correctly gotten</li>
	<li><strong>Fix</strong>: when Pydev was started, it would re-save the .pydevproject file even if no change was done</li>
	<li><strong>Fix</strong>: When tab width was set to 0 it could halt the editor (now if 0 is set, 4 is assumed)</li>
	<li>Grammar Patch by <strong>Ueli Kistler, Dennis Hunziker</strong></li>
</ul>


<br/>

<h3>News</h3>

<p>Two <strong>screencasts</strong> demonstrating pydev and pydev extensions have been created. They are hosted at <a href="http://showmedo.com/videos/series?name=PyDevEclipseList">ShowMeDo.com</a>.
</p>

<br/><br/>
<!--
<h4>Others that are new and noteworthy:</h4>

<ul>
<li>Some bugfixes
</li><li>Added option so that the user can choose whether to automatically add 'self' or not in method definitions
</li>
</ul>
-->

<!--
<hr/>
<h4>Special thanks to:</h4>
<strong>Vitor Oba</strong>, for patches in the debugger.<br/><br/>
<hr/>

<h4>OctetString</h4>
<a href="http://www.octetstring.com/"><IMG src="images/sponsors/os_logo_small.gif" border="1" ></a>
<br/>
<br/>
Pydev received a grant from <a href="http://www.octetstring.com/">OctetString</a> to 
add Jython support to PyDev.<br/><br/>

<p class="italic">"OctetString, Inc uses PyDev in its management system to enable
customers to develop data integration (mapping) scripts as part of
its LDAP virtual directory server (a J2SE based application). As a
user of PyDev, OctetString is pleased to be able to contribute back
to the project and its success!"   -Phil Hunt, Director of Engineering</p>

-->
<hr/>
<br/>
<h3>More...</h3>

Keep up-to-date with releases: 
<a href="http://sourceforge.net/export/rss2_projnews.php?group_id=85796&rss_fulltext=1">
<img src="images/general/xml.png" alt="XML" border="0" />
</a>
<br/>
<br/>




<a href="http://pydev.blogspot.com/">Get development info here</a> (Blog). 
<br/>
<br/>

<a href="download.html">Download it here</a>.

