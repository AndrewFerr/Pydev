<h2>New on: LAST_VERSION_TAG</h2>

<ul>
<li><strong>Bug Fix:</strong> Builtins were not correctly used after specifying interpreter (so, the builtins would not be available in completions/code-analysis).</li>
<li><strong>Patch (from Carl Robinson):</strong> PyLint severities can now be specified.</li>
</ul>


<h3>New Release: 1.3.5</h3>

<ul>
<li><strong>Eclipse 3.3 Integration:</strong> Does not keep eclipse from a correct shutdown anymore.</li>
<li><strong>Docstrings and code completion pop-up:</strong> </li>
<ul>
    <li>The docstrings are now wrapped to the size of the pop-up window.</li>
    <li>The initial columns with whitespaces that are common for all the docstring is now removed.</li>
    <li>The previous size of the pop-up window in completions is now restored.</li>
</ul>
<li><strong>Extract method refactoring:</strong> was not adding 'if' statement correctly on a specific case.</li>
<li><strong>Organize imports:</strong> (Ctrl+Shift+O): comments are not erased in import lines when using it anymore.</li>
<li><strong>Interpreter Config:</strong> solved a concurrency issue (which could issue an exception when configuring the interpreter).</li>
<li><strong>Jython integration:</strong> can now work with a j9 vm.</li>
<li><strong>Jython integration:</strong> those that don't use jython can now use eclipse without JDT (but it's still required for jython development).</li>
<li><strong>Outline:</strong> </li>
<ul>
    <li>The comments are now set in the correct level (below module, class or method).</li>
    <li>Comments are sorted by their position even when alphabetic sorting is in place.</li>
    <li>Comments are added to the outline if they start or <strong>end</strong> with '---'.</li>
</ul>
</ul>



<br/>
<hr/>
<h2>All Features (release LAST_VERSION_TAG):</h2>

<h3>Editor:</h3>
<ul>
<li><strong>Package Explorer</strong> showing outline for python modules</li>
<li><strong><a href="http://www.eclipse.org/mylar/">Mylar</a></strong> integration (separate feature: org.python.pydev.mylar.feature)</li>
<LI>Jython and Python support!</li>
<LI>Support for scripting Pydev with Jython</li>
<LI>Nice PYTHONPATH configuration!</li>
<LI>Project and module creation wizards</li>
<LI>Ctrl+Shift+O: Organizes imports or sorts selection alphabetically</li>
<LI>Ctrl+Shift+F: Autoformat your code (preferences can be set)</li>
<li>Python 2.4 syntax supported</li>
<li><strong>Python 2.5</strong> syntax supported</li>
<li>PyDev builders can be disabled</li>
<li>Syntax highlighting</li>
<li>Hovering in errors shows descriptions</li>
<li>Matching brackets highlighted.</li>
<li>Parser errors marked in the task list</li>
<li>Outline view with imports/functions/classes</li>
<li>Tabs or spaces preference</li>
<LI>Smart indentation (indent and dedent)</li>
<li>Navigation: keyboard shortcuts to previous or next function. <EM>Default: (Ctrl+Shift+Up and Ctrl+Shift+Down) </EM></li>
<li>Comment and uncomment commands (on the popup menu) and keybindings. <EM>Default: (Ctrl+3 and Ctrl+Shift+3) </EM></li>
<li>hyperlinks over functions//import statements</li>
<li>Code folding</li>
<LI><a href="refactoring.html">Refactoring</a> with <A href="http://bicyclerepair.sourceforge.net/">bicycle repair man</A>.</li>
<LI><a href="codecompletion.html">Code Completion</a> <EM>(Ctrl+Space) </EM> </li>
<LI>Templates Completion <EM>(Ctrl+Space Too) </EM></li>
<LI>Go to definition with <EM>F3</EM> (powered by <A href="http://bicyclerepair.sourceforge.net/">bicycle repair man</A>)</li>
<LI><a href="contentassist.html">Content Assistant</a> <EM>(Ctrl+1)</EM></li>
<LI><a href="codecoverage.html">Code Coverage</a></li>
<LI><a href="pylint.html">Pylint </a></li>
<LI><a href="tasks.html">TODO tasks</a> </li>
<LI>Background and current line color chooser.</li>
</ul>


<h3>Debugger</h3>

<ul>
<li>Python and Jython support</li>
<LI>Watch</li>
<li>Breakpoints</li>
<li>Step in/out/over</li>
<li>Multiple threads</li>
<li>Variable display</li>
<li>File hyperlinks in the console output (you can click on stack traces)</li>
</ul>




<hr/>
<h2>Features History</h2>

<h2>New on: 1.3.4</h2>

<ul>
<li><strong>Debugger:</strong> Breakpoints working correctly on external files opened with 'File > Open File...'.</li>
<li><strong>Debugger:</strong> Python 2.5 accepts breakpoints in the module level.</li>
<li><strong>Debugger:</strong> Unicode variables can be shown in the variables view.</li>
<li><strong>Editor:</strong> Coding try..except / try..finally auto-dedents.</li>
<li><strong>Code Completion:</strong> __builtins__ considered a valid completion</li>
<li><strong>Pydev Package Explorer:</strong> Opens files with correct editor (the pydev editor was forced).</li>
</ul>


<h2>New on: 1.3.3</h2>

<ul>
<li><strong>Performance:</strong> Optimizations in the code-completion structure.</li>
<li><strong>Debugger:</strong> Performance improvements (it will only actually trace contexts that have breakpoints -- it was doing that in a module context before).</li>
<li><strong>Debugger:</strong> Step over correctly stops at the previous context.</li>
<li><strong>Debugger:</strong> Breakpoint labels correct when class/function name changes.</li>
<li><strong>Quick-Fix:</strong> Move import to global scope would not be correct if the last line was a multi-line import.</li>
<li><strong>Outline:</strong> Syntax errors will show in the outline.</li>
<li><strong>Outline:</strong> Selection on import nodes is now correct.</li>
<li><strong>Outline:</strong> Link with editor created.</li>
<li><strong>Outline:</strong> Show in outline added to the pydev perspective.</li>
<li><strong>Find Previous Problem:</strong> action created (<strong>Ctrl+Shift+.</strong>).</li>
<li><strong>Extract method refactoring:</strong> end line delimiters are gotten according to the document (it was previously fixed to \n).</li>
<li><strong>Extension-points:</strong> Documentation added for some of the extension points available.</li>
<li><strong>Perspective:</strong> The pydev package explorer has been set as the preferred browser in the pydev perspective.</li>
</ul>



<h2>New on: 1.3.2</h2>


<ul>
<li><strong>Pydev Editor:</strong> If multiple editors are open for the same file, a parser is shared among them (which greatly improves the performance in this case)</li>
<li><strong>Pydev Editor:</strong> Backspace is now indentation-aware (so, it'll try to dedent to legal levels)</li>
<li><strong>Pydev Editor:</strong> sometimes the 'import' string was added when it shouldn't</li>
<li><strong>Fix: Code-completion:</strong> case where a package shadows a .pyd is now controlled (this happened with mxDateTime.pyd)</li>
<li><strong>Fix: Code-completion:</strong> recursion condition was wrongly detected</li>
<li><strong>Fix: Code-completion:</strong> halting condition was found and removed</li>
<li><strong>Fix: Project Config:</strong> if a closed project was referenced, no project was gathered for any operation (e.g.: code-completion)</li>
<li><strong>Fix:</strong> The filter for showing only pydev projects is not active by default anymore</li>
</ul>


<h2>New on: 1.3.1</h2>

<ul>
<li><strong><a href="http://www.eclipse.org/mylar/">Mylar</a> integration</strong>: the pydev package explorer now supports <a href="http://www.eclipse.org/mylar/">mylar</a> (packaged as a separate feature: <strong>org.python.pydev.mylar.feature)</strong></li>
<li><strong>Code-completion</strong>: comment completion is now the same as string completion</li>
<li><strong>Debug</strong>: Breakpoints can be set in external files</li>
<li><strong>Debug</strong>: Breakpoint annotations now show in external files</li>
<li><strong>Package Explorer</strong>: filter for import nodes created</li>
<li><strong>Fix: Package Explorer Actions</strong>: Open action does not expand children when opening python file</li>
<li><strong>Fix: Project Explorer (WTP) integration</strong>: does not conflict with elements from other plugins anymore (such as java projects)</li>
<li><strong>Fix: halt in new project wizard</strong>: when creating a new project from the pydev wizard it was halting in some platforms</li>
<li><strong>Fix: ${string_prompt} in run config</strong>: now only evaluated on the actual run</li>
<li><strong>Fix: Code-Completion</strong>: jython shell was not handling java.lang.NoClassDefFoundError correctly</li>
</ul>


<h2>New on: 1.3.0</h2>
	
<ul>
<li><strong>Code-completion</strong>: Deep analysis for discovering arguments in constructs 'from imports' now can be configured given the number of chars of the qualifier</li>
<li><strong>Refactoring for override methods</strong>: changed so that it uses the pydev code-completion engine for getting the hierarchy and methods</li>
<li><strong>Fix: Python Nature Restore</strong>: begin rule does not match outer scope rule fixed</li>
<li><strong>Fix: Package Explorer</strong>: if show-in is in a deep structure, it will show it is the 1st try and not only in the 2nd</li>
<li><strong>Fix: Package Explorer</strong>: some intercepts removed elements incorrectly, and ended up messing the navigator and search (which has 'null' elements because of that)</li>
</ul>

<h2>New on: 1.2.9</h2>

<ul>
<li>Repackaging fix</li>
</ul>

<h2>New on: 1.2.8</h2>

<ul>
<li><strong>Refactoring</strong>: integration of the <a href="http://sifsstud2.hsr.ch/peptic">PEPTIC refactoring engine</a></li>
<li><strong>Package Explorer</strong>: many fixes (special thanks for Don Taylor for the bug reports)</li>
<li><strong>Debugger</strong>: a number of small optimizations</li>
<li><strong>Code-completion</strong>: works in emacs mode</li>
<li><strong>Code-completion</strong>: added the possibility of auto-completing for all letter chars and '_' (so, it starts completing once you start writing)</li>
<li><strong>Code-completion</strong>: code-completion for epydoc inside strings</li>
<li><strong>Code-completion</strong>: assigns after global statement considered added to the global namespace</li>
<li><strong>Code-completion</strong>: now works when a class is declared in a nested scope</li>
<li><strong>Code-completion</strong>: if multiple assigns are found to some variable, the completion will be a merge of them</li>
<li><strong>Code-completion</strong>: functions are analyzed for their return values for code-completion purposes</li>
<li><strong>Code-completion</strong>: working on multi-line imports</li>
<li><strong>Code-completion</strong>: can discover instance variables not declared in the class (in the scope where the class was instanced)</li>
<li><strong>Auto-edit</strong>: adds 'self', 'cls' or no parameter based on the @clasmethod, @staticmethod declaration on previous line</li>
<li><strong>Auto-edit</strong>: doesn't add 'self' if a method is declared in a method inner scope</li>
<li><strong>Fix: BRM Refactoring</strong>: wrong column was being passed to the BRM refactoring engine</li>
<li><strong>Code-folding</strong>: added for comments and strings</li>
<li><strong>Fix</strong>: sometimes the 'create docstring' assistant was not recognizing method definitons</li>
</ul>

<h2>New on: 1.2.7</h2>

<ul>
<li><strong>Debugger</strong>: change value implemented</li>
<li><strong>Pydev Package Explorer</strong>: Default actions (copy, paste, rename, etc) reimplemented (see <a href="http://pydev.blogspot.com/2006/12/package-explorer-status-for-pydev.html">blog</a> to see what this fixed)</li>
<li><strong>Block Comments</strong>: The remove block comments (Ctrl+5) will now remove contiguous comments -- if several lines are commented, putting the cursor in any of those lines and pressing Ctrl+5 will remove all those comments</li>
<li><strong>Launch</strong>: When creating a new launch, the 'default' option is chosen, so, if the default interpreter changes later, this won't affect existing launch configurations</li>
<li><strong>Code Completion</strong>: 'cls' does not appear as 1st parameter on code completion anymore</li>
<li><strong>Code Completion</strong>: completions for cls on classmethods now works correctly</li>
<li><strong>Keybindings</strong>: Ctrl+Tab and Ctrl+Shift+Tab keybindings removed from convert tabs to space-tabs (and vice-versa) -- they are still available in the source menu</li>
<li><strong>Fix</strong>: the PYTHONPATH passed to <strong>PyLint</strong> was not containing the project PYTHONPATH</li>
<li><strong>Fix</strong>: halting condition on code-completion execution</li>
<li><strong>Fix</strong>: 'create docstrings' assist creates <strong>@param</strong> even if there is a comment in a function definition</li>
<li><strong>Fix</strong>: block comment for class will recognize better when it is on a class definition line</li>
</ul>


<h2>New on: 1.2.6</h2>

<ul>
	<li><strong>Pydev package explorer</strong> (Still <strong>BETA</strong>, so, use it with care -- the navigator is still the preferred way of browsing your project)</li>
	<ul>
		<li>Filters for .pyc and .pyo files created</li>
		<li>Working set integration added (just available for Eclipse <strong>3.2.1</strong>)</li>
		<li>Some minor bugs fixed</li>
	</ul>
	<li>Patch by <strong>Olof Wolgast</strong>: The <strong>'create docstrings'</strong> assistant has more options (windows > preferences > pydev > code formatter > docstrings)</li>
	<ul>
		<li>Option to choose between <strong>single and double quotes</strong></li>
		<li>Option to <strong>create '@type'</strong> too and not only '@param'</li>
		<li>Option to <strong>skip creation of the @type</strong> tag for parameters starting with some prefix (if 'Custom' is chosen)</li>
	</ul>
	<li><strong>Block comments</strong> now have more options (windows > preferences > pydev > code formatter > block comments)</li>
	<ul>
		<li>Option to <strong>align single-line block comment to the left or right</strong></li>
		<li>Option to put class name above class if applied on a class definition</li>
	</ul>
	<li><strong>Fix</strong>: Multi-line Templates indent correctly</li>
	<li><strong>Fix</strong>: When a file from a project that was deleted was still opened inside pydev, Eclipse would not start-up correctly</li>
	<li><strong>Fix</strong>: When a different interpreter is chosen in the run dialog, the pythonpath is correctly gotten</li>
	<li><strong>Fix</strong>: when Pydev was started, it would re-save the .pydevproject file even if no change was done</li>
	<li><strong>Fix</strong>: When tab width was set to 0 it could halt the editor (now if 0 is set, 4 is assumed)</li>
	<li>Grammar Patch by <strong>Ueli Kistler, Dennis Hunziker</strong></li>
</ul>



<h2>New on: 1.2.5</h2>

<ul>
	<li><strong>Pydev package explorer</strong> was created. Features already implemented:
		<ul>
			<li>Common resource actions (delete, copy, rename, team...)</li>
			<li>Shows the Source folder with a different icon</li>
			<li>Linking mode enabled</li>
			<li>Shows the outline for a python file</li>
			<li>Opening an item in the outline opens the correct place in the correspondent file</li>
		</ul>
	</li>
	<li>Debugger bug-fix: Crash when debugging wxPython programs should not happen anymore</li>
	<li>When opening a file, the encoding is considered (and not only when saving it)</li>
	<li>Patches from <strong>Gergely Kis</strong>:
		<ul>
		<li>Option for having a 'default interpreter' in the combo for selecting which interpreter to use for a run</li>
		<li>Saving the things related to the pydev project in a .pydevproject file to be commited</li>
		</ul>
	</li>
	<li>Patch from <strong>Gregory Golberg</strong>:	
		<ul>
		<li><strong>Ctrl+Shift+D</strong> when a variable is selected in debug mode shows the variable value</li>
		</ul>
	</li>
</ul>


<h2>New on: 1.2.4</h2>

<ul>
<li>Completions for parameters based on the tokens that were defined for it in a given context
</li><li>Removed the default PyLint options, because its command-line interface changed (that was crashing PyLint in newer versions)
</li><li>Changed the grammar so that 'yield' is correctly parsed as an expression
</li><li>Giving better error message when external file is opened without any interpreter selected
</li><li>Icons for the builtins gotten on large libraries (such as wx -- it was optimized not to do that before)
</li><li>Adding jars relative to the project now works correctly
</li><li>The debugger is now able to get the variables in a context when handling negative payloads (<strong>patch by Javier Sanz</strong>)
</li>
</ul>

<h2>New on: 1.2.3</h2>

<ul>
<li>When the user specifies an invalid interpreter, a better error report is given (previously it was only shown in the error log)
</li><li>When threads die, the debugger is notified about it (so that they are removed from the stack)
</li><li>Writing the preferences to the disk is now buffered
</li><li>Fixed problem when debugging in jython with the statement "from xxx import *"
</li><li>Fixed one issue with the indentation engine
</li><li>Commenting a line does not remove a blank line in the end anymore
</li><li>Added debug mode for unit-test 
</li><li>Added the possibility of setting the <strong>-Dpython.cachedir</strong> for running the jython shell (errors can arise in unix-based machines if jython is not able to write its cache)

<h4>Contributions</h4>
<ul>
</li>

<li><strong>Darrell Maples</strong>:
	<ul>
		<li>Unit-test refactoring</li>
		<li>Run as jython unit-test</li>
		<li>Filter test methods to run</li>
	</ul>
</li>
<br/>
<li><strong>Joel Hedlund</strong> 
	<ul>
        <li>
        Added a support to ease adding options to Ctrl+1 in the scripting engine
        </li>
		<li>
Added a ctrl+1 for the case:<br/>
<br/>
def m1(self, arg=None):<br/>
&nbsp;&nbsp;&nbsp;&nbsp;arg |<-- Ctrl+1 shows option to do:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<br/>
def m1(self, arg=None):<br/>
&nbsp;&nbsp;&nbsp;&nbsp;if arg is None:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg = []<br/><br/>
        </li>
	</ul>
</li>    
</ul>

<h4>Support for python 2.5</h4>
<ul>
</li><li>Added the new relative import
</li><li>Added the new if expression
</li><li>Added the unified try..except..finally statement
</li><li>Added the with x:... statement
</li><li>Indenting after the new with statement
</li><li>Recognizing 'with' as a keyword in syntax highlighting
</ul>
</ul>



<h2>New on: 1.2.2</h2>

<strong>Code Completion</strong>
<ul>
<li>Calltips added to pydev
</li><li>The parameters are now linked when a completion is selected (so, tab iterates through them and enter goes to the end of the definition)
</li><li>Parameters gotten from docstring analysis for builtins that don't work with 'inspect.getargspec'
</li><li>Getting completions for the pattern a,b,c=range(3) inside a class
</li><li>Code completion for nested modules had a bug fixed
</li><li>Added the 'toggle completion type' when ctrl is pressed in the code-completion for context-sensitive data
</li><li>Code-completion works correctly after instantiating a class: MyClass(). &lt;-- will bring correct completions
</li><li>Code-completion can now get the arguments passed when instatiating a class (getting the args from __init__)
</li><li>self is added as a parameter in the completion analyzing whether we're in a bounded or unbounded call
</li><li>Pressing Ctrl+Space a second time changes default / template completions
</li>
<strong>See <a href="http://pydev.blogspot.com/2006/07/improving-code-completion-in-pydev.html">details on toggling completion mode, cycling through completions and linked mode (blog)</a></strong>
</ul>

<strong>Outline View</strong>
<ul>
	<li>Added option for hiding comments and imports
	</li><li>Persisting configuration
	</li><li>Added option for expanding all
	</li>
</ul>

<strong>Others</strong>
<ul>
<li>Possibility of setting pyunit verbosity level (by <strong>Darrell Maples</strong>)
</li><li>Errors getting the tests to run are no longer suppressed
</li><li>Ctrl+2+kill also clears the internal cache for compiled modules (especially useful for those that create compiled dependencies).
</li><li>Last opened path remembered when configuring the pythonpath (dialog)
</li>
</ul>








<h2>New on: 1.2.1</h2>


<ul>
<li>The user is asked for which paths should be added to the system pythonpath
</li><li>Go to previous method now works with decorators
</li><li>Stack-trace link now opens in correct line for external files
</li><li>Variables now show in the variables view while debugging
</li><li>If an invalid interpreter is selected to run a file (old interpreter or wrong project type), a warning is given to the user
</li><li>Ctrl+w is removed as the default for select word (the action is still there, but its keybinding is removed, so, users have to configure themselves which keybinding they want for it)
</li><li>Assign to local or field variable now enters in linked mode
</li><li>Added dependency to Eclipse 3.2 features, as version 1.2.0 of pydev and newer are only Eclipse 3.2 compatible.
</li>
</ul>



<h2>New on: 1.2.0</h2>



<ul>
<li>Eclipse 3.2 supported (and 3.1 support is now discontinued)
</li><li>Lot's of optimizations to make pydev faster
</li><li>Ctrl+Click now works with the find definition engine 
</li><li>Comments that start with #--- are shown in the outline
</li><li>Attributes are shown in the outline
</li><li>Parse errors are now shown (again) in the editor
</li><li>Many other bugs fixed
</li>
</ul>


<h2>New on: 1.1.0</h2>


<ul>
<li>Startup is now faster for the plugin: actions, scripts, etc. are now all initialized in a separate thread
</li><li>Indentation engine does not degrade as document grows
</li><li>Multiple-string does not mess up highlighting anymore
</li><li>code completion issue with {} solved
</li><li>Ctrl+W: now expands the selection to cover the whole word where the cursor is
</li><li>Assign to attributes (provided by Joel Hedlund) was expanded so that Ctrl+1 on method line provides it as a valid proposal
</li><li>A Typing preferences page was created so that the main page now fits in lower resolutions 
</li>
</ul>
<br/>
<strong>NOTE</strong>: this is the last version with support for Eclipse 3.1
<br/>
<br/>


<h2>New on: 1.0.8</h2>

<ul>
<li>The Parser character stream was redone to be more efficient (especially when dealing with big files)
</li><li>The thread that does analysis had its priority lowered
</li><li>When running a file, the pythonpath set now let's the project pythonpath before the system pythonpath
</li><li>The way modules are resolved for loading when running unit-tests has changed
</li><li>Indentation further improved
</li><li>Debugger changes for working with jython
</li><li><strong>Ctrl+2+w</strong>: wraps the current paragraph to the number of lines specified in the preferences. This was provided by <strong>Don Tailor</strong> (revisions are also available in <a href="http://pilger.googlepages.com/pydevstuff">http://pilger.googlepages.com/pydevstuff</a>)
</li><li>Lot's of bug-fixes and optimizations
</li>
</ul>



<h2>New on: 1.0.7</h2>


<ul>
<li>This is a single-bugfix release. It fixes an error that could occur when adding a newline in a document
	that had a docstring with an empty newline in the global level.
</li>
</ul>


		
<h2>New on: 1.0.6</h2>


<ul>
<li>Assign variables to attributes (Ctrl+2+a): Contributed by Joel Hedlund (this is the first contribution using the new jython scripting engine).
</li><li>3 minor 'quirks' were fixed in the indentation engine
</li><li>The debugger had some changes (so, if you had halts with it, please try it again).
</li><li>Allow changing the keybinding for activating the Find next problem (Ctrl+.)
</li><li>The debugger step-return had its behaviour changed.
</li><li>Additional scripts location added to pythonpath in the jython scripting engine
</li><li>Transversal of nested references improved
</li><li>Fixed problems with compiled modules when they had 'nested' module structures (e.g.: wx.glcanvas)
</li>
</ul>


	
	

<h2>New on: 1.0.5</h2>


<ul>
<li>
	Another batch of things to improve <strong>indentation</strong>:
	<ul>
<li>	    Indent does not try to make auto-indentation when pasting
</li><li>	When smart-indent is not selected, it will still add an indentation level after ':'
</li><li>	It will keep the indent of the previous line on new-lines if the current line is empty
</li><li>	Other little things
</li>
	</ul>
</li>
<li>Added a place to specify <strong>vm arguments</strong> (for jython or python) -- thanks to  Rudi de Andrade for this patch
</li><li>Added a way to kill the underlying python/jython shells (<strong>Ctrl+2+kill</strong>)
</li>
</ul>



	
	
<h2>New on: 1.0.4</h2>


<ul>
<li><strong>Added jython scripting </strong>
<ul>
	<li><a href="http://www.fabioz.com/pydev/manual_articles_scripting.html">Link to article on how to create your own scripts with the new scripting engine.</a></li>
</ul>
</li><li>Added an 'easy' way to bind actions after Ctrl+2 (to make scripting easier)
</li><li>Added a way to list things binded with Ctrl+2 (To see: Ctrl+2+help)
</li><li>Added a 'go to next problem' with jython scripting capabilities, as a first example on how to script Pydev with Jython (Ctrl+.)
</li><li>A brand new indentation engine is available:</li>
<ul>
	<li>Does not try to make different indentations inside multilines
	</li><li>Does not try to add spaces to make smart-indent when in only tabs mode
	</li><li>Indents correctly after opening some bracket or after closing some bracket
	</li><li>Indents to 'expected level' when hitting tab</li>
</ul>
<li>Fixed bug: syntax error described instead of throwing an error
</li><li>Profiled Pydev (not that much, but still, I hope you'll be able to 'feel' it)
</li><li>Fixed bug: the pythonpath was not added when additional environment variables where specified
</li><li>And as always, other bugs have been fixed
</li>
</ul>




	
<h2>New on: 1.0.3</h2>


<ul>
<li>Fixed error while organizing imports with the construct from xxx import (a,b\n c)
</li><li>Auto-dedent for 'else:' and 'elif' constructs
</li><li>Added color customization for the function name and class name
</li><li>Fixed debugger error: it could halt when getting some variable representation if the variable translated in a string that was huge
</li><li>Fixed error while debugging with conditional breakpoint (only evaluated the first time) -- Thanks to Achim Nierbeck for this fix
</li><li>Show in view: Resource Navigator (Ctrl+Alt+W) now is always active on the pydev view
</li><li>Fixed leak on template images
</li>
</ul>



	
<h2>New on: 1.0.2</h2>

<ul>
<li>Jython debugging now working.
</li><li>Code coverage does not report docstrings as not being executed.
</li><li>Freeze when making a 'step-in' fixed in the debugger.
</li><li>Grammar generated with javacc version 4.0 
</li>
</ul>



<h2>New on: 1.0.1 </h2>
<ul>
<li><strong>Fix for an out-of-memory error when restoring the interpreter</strong> (single thing in this release)
</ul>


<h2>New on: 1.0</h2>

<ul>
<li><strong>High-speed Debugger</strong> (on par with the best debuggers available)
</li><li>Debugger now gets the variables 'on-demand'
</li><li>The variables returned for jython are much more complete
</li><li>Wizard to create new project has option for creating a default 'src' folder (and add it to the pythonpath).
</li><li>The create new python module and new python package have been reviewed (you can still use the regular ones, but the new ones are really reccommended -- also it will help in making sure you have your pythonpath correctly configured!).
</li><li>Create new source folder option added.
</li><li>Pylint can now give the output to the console (configurable).
</li><li>Pylint 0.9.0 tested
</li><li>Pylint errors now show in the hover
</li><li>The Pydev perspective was changed (so, please, close the current and ro-open it)
</li><li>Templates were added for the keywords
</li><li>Keybindings were added to run the current editor as python (F9) or as jython (Ctrl+F9). Those are customizable in the 'keys' preferences 
</li><li>And many other bug-fixes as usual
</li>
</ul>


<h2>New on: 0.9.8.7</h2>

<ul>
<li><strong>The debugger tracing was turned off </strong> (this was a bug in 0.9.8.6 and could make debugging much slower)
</li><li><strong>Fixed jython shell</strong> (and extended it to get better information on code-completion).
</li><li><strong>Changed the interpreter configuration so that it is backwards-compatible from now on...</strong>(but the current interpreters will be lost and will need to be configured)
</li><li><strong>Breakpoints can have conditionals</strong>(this was contributed by Achim Nierbeck, and was actually provided in release 0.9.8.6, but I forgot to put it in the release notes)
</li><li>Some other bugfixes are also in this build.
</li>
</ul>


<h2>New on: 0.9.8.6</h2>

<ul>
<li><strong>Added a new 'Pydev project' wizard (Mikko Ohtamaa contribution) </strong>-- it is named as Pydev Project instead of Python project
because it creates Python and Jython projects.
</li><li><strong>Added a new 'Pydev module' wizard (Mikko Ohtamaa contribution)</strong> -- NOTE: it still needs some work.
</li><li><strong>Changes in the shell spawning were done, and no hangs should appear when trying to do code-completion anymore </strong>
(if it still hapens, please report it as a bug -- NOTE: a little delay on the first time code-completion is executed
is expected, as this is the time the shell is started).
</li>
</ul>



<h2>New on: 0.9.8.5</h2>

<ul>
<li>Removed the dependency on packages 'sun.xxxx.Base64', so that other VMs can be targetted
</li><li>Some code-completion problems in the 'resolution order' regarding tokens in __init__ were solved
</li><li>Added option so that the user can choose whether to automatically add 'self' or not in method definitions
</li>
</ul>


<h2>New on: 0.9.8.4</h2>

<ul>
<li>The license was changed to EPL. It can be found at: <a href="http://www.opensource.org/licenses/eclipse-1.0.php">http://www.opensource.org/licenses/eclipse-1.0.php</a>
</li><li>Code-completion information is now saved in deltas instead of "saving only at shutdown" (being so, it does not loose information if it does not have a regular shut-down).
</li><li>Added option for not using the smart-indent after opening brackets
</li>
</ul>



<h2>New on: 0.9.8.3</h2>


<ul>
<li>Debugger was improved to be faster (more info about it <a href="http://pydev.blogspot.com/2005/10/high-speed-debugger.html"> at my blog</a>).
</li><li>Add watch added to the editor popup menu
</li><li>Added syntax highlighting to the 'self' token
</li><li>Code folding added for 'glued' imports
</li><li>Fixed some outline problems
</li><li>Debugger does not try to get breakpoints on closed projects anymore
</li><li>Some refreshing issues regarding the outline and colors when reusing the editor were fixed
</li><li>Code completion for relative imports has changed a lot (there were some pretty hard-to-find bugs in this area...)
</li><li>Some move imports problems fixed
</li><li>The auto-add '(self):' now works with tabs too
</li>
</ul>



<h2>New on: 0.9.8.2</h2>

<ul>
<li><strong><a href="contentassist.html">Content assistants</a> reviewed (and better documented on the homepage -- I really reccomend checking <a href="contentassist.html">it</a>)</strong>
</li><li><strong>Timeout parsing options added (this is available in the builder preferences page)</strong>
</li><li><strong>Auto-dedent added</strong>
</li><li>.pyc is removed when the corresponding .py file is removed.
</li><li>Debugger has been changed so that it becomes faster (still not as fast as I would like, but still... faster)
</li><li>Some escaped quotes problems fixed when formatting code
</li><li>Navigation with Ctrl+Shift+ (up or down) has been slightly improved, so that it goes to the start or the end of the file when no other class or method definition is found
</li><li>Other bug-fixes (as ususal)
</li>
</ul>



<h2>New on 0.9.8.1</h2>

<ul>
<li><strong>Java 1.4 support reintroduced</strong>. 
</li><li><strong>Styles added for syntax highlighting (bold and italic), contributed by Gerhard Kalab</strong>.
</li><li>zombie process after exiting eclipse should not happen anymore
</li><li>paths with '.' are accepted for the pythonpath (unless they start with a '.', because it may not accept relative paths).
</li><li>relative imports are added to code-completion
</li><li>local imports are taken into consideration when doing code completion
</li><li>debugger has 'change support', so, changed variables in a scope appear red
</li>
</ul>


<h2>New on 0.9.8</h2>

<ul>
<li>jython integration supports spaces for jython.jar and java install
</li><li>jython code-completion support for new style objects (jython 2.2a1) has been enhanced.
</li><li>many templates were added
</li><li>the grammar evolved a lot, so, now you actually have decorators in the grammar, list comprehension on method calls and tuples and the new from xxx import (a,b,c) syntax.
</li><li>pylint supports spaces
</li><li>pylint is no longer distributed with pydev (it must be installed in the site-packages and its location must be specified in the preferences)
</li><li>some problems regarding 'zombie processes' after eclipse exit with the shells used for code-completion should be fixed
</li>
</ul>

<h2>New on 0.9.7.99</h2>

<ul>
<li><strong>PyDev has its first shot at Jython</strong>. you should be able to use many things already, meaning: all the common editor features and code completion.
</li><li><strong>The debugger is working</strong>.
</li><li>Code completion has been improved for supporting wild imports and relative imports better (sometimes it had some problems).
</li><li>There are hovers for the text and annotations (when you pass the mouse through an error it will show its description).
</li><li>Block comment (Ctrl+4) now uses the size defined for the print margin.
</li><li>New block-comment style added (Ctrl+Shift+4).
</li><li>New icons were created.
</li><li>Many other bug-fixes as usual.
</li>
</ul>


<h2>New on 0.9.7</h2>

<ul>
<li>This release contains some high-priority bug fixes...
</li>
</ul>


<h2>New on 0.9.6</h2>

<ul>
<li><strong>Eclipse 3.1 is supported</strong>
<li><strong>Only java 5 is supported</strong>
</li><li>Pydev builder ignores team private members
</li><li>Print Margin indicator now displays correctly
</li><li>Help docs are shown again
</li><li>Text editor configurations are inherited from the text editor (and just extended in the preferences)
</li><li>Auto-close parentesis and 'eat colon' (courtesy from Karol Pietrzak)
</li><li>Some more bugs...
</li>
</ul>


<h2>New on 0.9.5</h2>

<ul>
<li><strong>Last release with java 1.4 support</strong>
</li><li>File encodings now follow the python convention
</li><li>Overview ruler now works 
</li><li>Editor is synchronized when working in multiple windows with the same file
</li><li>Code folding improved
</li><li>Syntax highlighting is not confused by escaped quote + triple quote anymore
</li><li>Insertion of parentheses now replaces selected text
</li>
</ul>


<h2>New on 0.9.4</h2>

<ul>
<li>Nice PYTHONPATH configuration, and it is used for running your files, PyLint, code completion...
</li><li>Integrated Scott Schleiser patches for the debugger (you won't see any 'implement me' anymore!).
</li><li>Integrated Heikki Toivonen patch for <a href="pylint.html">PyLint</a> using the project pythonpath. 
</li><li>Integrated Heikki Toivonen patch for indentation after '(', '[' and '{' (if the line ends with a comma).
</li><li>Some StackOverflow errors were removed from code completion.
</li><li>Keybindings added for <a href="refactoring.html">Refactoring</a> (powered by bycicle repair man) - check the <a href="faq.html">FAQ</a>.
</li>
</ul>


<h2>New on 0.9.3</h2>
<ul>
<li>Code completion is finished until 1.0 is released, so, if you`re missing something, please report it!
</li><li>New <a href="contentassist.html">Content Assistants</a> added. Not very well documented right now, but I'll do it later...
</li><li>Removed dependecy on java.internals packages, so, this should solve the problems some people had when updating to 0.9.2
</li><li>Latest PyLint integrated.
</li>
</ul>


<h2>New on 0.9.2</h2>
<ul>
<li>Scott Schleiser inside the editor... now on apply, it applies new settings, without restarting the editor.
</li><li>Scott Schleiser inside the debugger... most 'implement me' and 'volunteers needed' were fixed.
</li><li>New <a href="contentassist.html">Content Assistants</a> added. 
</li><li>Docstrings in national encodings should work.
</li><li>from foo import bar, xxx, yyy... should work.
</li><li>Custom colors for decorators and numbers.
</li><li>Matching brackets highlighted.
</li><li>Bugs: code-formatting and others...
</li>
</ul>


<h2>New on 0.9.1:</h2>
<ul>
<LI>Ctrl+Shift+O: Organizes imports or sorts selection alphabetically</li>
<LI>Ctrl+Shift+F: Autoformat your code (preferences can be set)</li>
<LI>Namespace and PYTHONPATH now are the same for debug and run</li>
<LI><a href="codecompletion.html">Code Completion</a> has been improved: Parameters are gotten
as completions, builtins like -- [], {} and '' --  
return completions. Relative imports should be working (along with some other bug-fixes).</li>
<LI><a href="pylint.html">PyLint 0.6.3</a> integrated.</li>
</ul>


<h2>New on 0.9.0:</h2>
<ul>
<LI><a href="codecompletion.html">Code Completion</a> bug for python 2.4 fixed.</li>
<LI><a href="codecompletion.html">Code Completion</a> has other bug-fixes solved, mostly due to imports that it was unable to find.</li>
<LI><a href="pylint.html">PyLint 0.6</a> integrated.</li>
<LI>New Python 2.4 syntax supported <a href="">see notes here.</a></li>
<LI>PyDev builders can be disabled (NOTE: some features might not work when this is done - see the <a href="faq.html">FAQ</a>).</li>
</ul>

<h2>New on 0.8.5:</h2>
<ul>
<LI>Better <a href="codecompletion.html">Code Completion</a> <EM>(Ctrl+Space) </EM> </li>
<LI>Watch in debugger.</li>
<LI>Background and current line color chooser.</li>
</ul>

<h2>New on 0.8:</h2>
<ul>
<LI><a href="pylint.html">Pylint integrated</a></li>
<LI><a href="tasks.html">TODO tasks</a> supported</li>
</ul>

<h2>New on 0.7.1:</h2>
<ul>
<LI><a href="codecoverage.html">Code Coverage</a></li>
<LI><a href="run.html">Run subset from dir</a> (this is not unit-test, but it can be really useful if you do tests).</li>
<LI><a href="contentassist.html">New Content Assistants</a> <EM>(Ctrl+1)</EM></li>
<LI>
	Integrated new <a href="refactoring.html">refactorings</a> from <A href="http://bicyclerepair.sourceforge.net/">bicycle repair man</A> 
	(inline local variable and extract local variable)
</li>
</ul>

