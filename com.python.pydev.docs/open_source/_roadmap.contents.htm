<H3>Roadmap </H3>

<strong><P>What's next?</P></strong>

<p>
	Well, Pydev has never had a 'formal' roadmap, and this session is really just to make that clear ;-)
</p>

<p>
	So, what's to <strong>expect</strong> from it? Well, the <a href="http://sourceforge.net/tracker/?group_id=85796&atid=577332">feature requests </a>
	are the features that are more likely to be implemented. Pydev development is mostly driven by the requests in that list (and 
	through <a href="http://sourceforge.net/tracker/?group_id=85796&atid=577329">bug reports</a>).
</p>

<p>
	The other 'source' of <strong>improvements</strong> is through code given by people that miss something, and instead of just reporting it and
	waiting to see if it gets implemented get so excited (or annoyed) that they just do it and contribute their code back to Pydev.
	(and that's the real <strong>magic</strong> of Open Source -- if you are in that team, below are some quick instructions on how to get the 
	code and compile it).
</p>

<p>
	Now, on to <strong>Release Cycles</strong>: Pydev usually has at least one release every month, and each release is always considered
	as a <strong>final version</strong>. So, you shouldn't worry when getting the latest version. If for some reason some <strong>
	critical bug</strong> is found in a version, you'll see another release pretty soon (something like 2-5 days after the release
	that presented that bug -- and sometimes even sooner). 
</p>

<br>
<br>







<H3>You'd like to give it a try?</H3>

<P>You can download the latest source 
		from sourceforge. </P>

<STRONG>Compiling the code:</STRONG><br/>
<P>To compile, you need to set the following preferences:</P>

<P>'Plug-In Development: Java Build Path Control: Use classpath containers' to true</P>

<P>'Plug-In Development: Target Platform' select "this application" and enable all plugins.</P>

<P>Most of the code is well-documented in javadoc. I try 
	to cc every answer to a coding question to pydev-code, so you can look there for 
	hints too. That's it. If you have not developed Eclipse plugins before, I 
	recommend reading the online documentation and trying out a sample plugin. 
	Doing some prep work before jumping in will really pay off.</P>

<STRONG>Compiling the tests:</STRONG><br/>
<P>If you are compiling the tests too, you have to create a file named 
	<strong>org.python.pydev.editor.codecompletion.revisited.TestDependent.java</strong>. There is a file named
	TestDependent.template that can be used as a base for it (there are many system-dependent things
	that have to be specified for running tests).
</P>
<STRONG>Then, it is all up to you.</STRONG>
