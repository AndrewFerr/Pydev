<project name="Build specific targets and properties" default="noDefault" basedir=".">
	
<taskdef name="retroweaver"
	classname="com.rc.retroweaver.ant.RetroWeaverTask">
	<classpath>
		<fileset dir="${retroweaver.home}/lib" includes="**/*"/>
			<pathelement location="${retroweaver.home}/release/retroweaver.jar"/>
	</classpath>
</taskdef>

<property name="basews" value="*" />
<property name="baseos" value="*" />
<property name="basearch" value="*" />
<property name="basenl" value="en_US" />

<!-- ===================================================================== -->
<!-- Run a given ${target} on all elements being built -->
<!-- Add on <ant> task for each top level element being built. -->
<!-- ===================================================================== -->

<target name="allElements">
	<antcall target="${target}ForAllElements"/>
</target>

<target name="fetchElementForAllElements" unless="dontFetchAnything"> 
	<antcall target="genericAllElements"/>
</target>

<target name="generateScriptForAllElements">
	<antcall target="genericAllElements"/>
</target>

<target name="processElementForAllElements">
	<antcall target="genericAllElements"/>
</target>

<target name="assembleElementForAllElements">
	<antcall target="genericAllElements"/>
</target>

<target name="cleanElementForAllElements">
	<antcall target="genericAllElements"/>
</target>

<target name="gatherLogsForAllElements">
   <antcall target="genericAllElements"/>
</target>

<target name="genericAllElements">
	<ant antfile="${genericTargets}" target="${target}" >
		<property name="type" value="feature" />
		<property name="id" value="com.python.pydev.extensions" />
	</ant>
</target>


<!-- ===================================================================== -->
<!-- Targets to assemble the built elements for particular configurations  -->
<!-- These generally call the generated assemble scripts (named in -->
<!-- ${assembleScriptName}) but may also add pre and post processing -->
<!-- Add one target for each root element and each configuration -->
<!-- ===================================================================== -->

<target name="assemble.com.python.pydev.extensions">
	<ant antfile="${assembleScriptName}" dir="${buildDirectory}"/>
</target>

<!-- ===================================================================== -->
<!-- Check out map files from correct repository -->
<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
<!-- ===================================================================== -->
<target name="getMapFiles">
	<copy todir="${buildDirectory}/maps">
		<fileset dir="${builder}/maps"/>
	</copy>
</target>

<!-- ===================================================================== -->
<!-- Steps to do before setup -->
<!-- ===================================================================== -->
<target name="preSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after setup but before starting the build proper -->
<!-- ===================================================================== -->
<target name="postSetup">
</target>

<!-- ===================================================================== -->
<!-- Steps to do before fetching the build elements -->
<!-- ===================================================================== -->
<target name="preFetch">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after fetching the build elements -->
<!-- ===================================================================== -->
<target name="postFetch">
	<replaceregexp match="Bundle-Version:(.*)" replace="Bundle-Version: ${pydev.version}" byline="true">
		<fileset dir="${buildDirectory}" includes="**/*.MF"/>
	</replaceregexp>
	
	<replaceregexp file="${buildDirectory}\features\com.python.pydev.extensions\feature.xml" match='version="0(.*)"' replace='version="${pydev.version}"' byline="true"/>
</target>

<!-- ===================================================================== -->
<!-- Steps to do before generating the build scripts. -->
<!-- ===================================================================== -->
<target name="preGenerate">
</target>

<!-- ===================================================================== -->
<!-- Steps to do after generating the build scripts. -->
<!-- ===================================================================== -->
<target name="postGenerate">
    <echo message="---------------------------------------------------------------- postGenerate ----------------------------------------------------------------"/>  
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="preProcess">
    <echo message="---------------------------------------------------------------- preProcess ----------------------------------------------------------------"/>  
	<replace dir="${buildDirectory}/plugins" value="${timestamp}" token="@build@">
		<include name="**/about.mappings" />
	</replace>
</target>


<!-- ===================================================================== -->
<!-- Steps to do after running the build.xmls for the elements being built. -->
<!-- ===================================================================== -->
<target name="postProcess">
    <echo message="---------------------------------------------------------------- postProcess ----------------------------------------------------------------"/>  
	<delete dir="${jar1}" />
	<delete dir="${jar2}" />
	<delete dir="${jar3}" />
	<delete dir="${jar4}" />

	<unzip src="${jar1}.jar" dest="${jar1}/out"><patternset><include name="**/*.*"/></patternset></unzip>
	<unzip src="${jar2}.jar" dest="${jar2}/out"><patternset><include name="**/*.*"/></patternset></unzip>
	<unzip src="${jar3}.jar" dest="${jar3}/out"><patternset><include name="**/*.*"/></patternset></unzip>
	<unzip src="${jar4}.jar" dest="${jar4}/out"><patternset><include name="**/*.*"/></patternset></unzip>
	
	<!-- pass retroweaver -->
	<echo message = "********************************* weaving jars ${jar1}"/>
	<retroweaver srcdir="${jar1}/out" verbose="false" destdir="${jar1}/out" version="1.4"/>
	
	<echo message = "********************************* weaving jars ${jar2}"/>
	<retroweaver srcdir="${jar2}/out" verbose="false" destdir="${jar2}/out" version="1.4"/>
	
	<echo message = "********************************* weaving jars ${jar3}"/>
	<retroweaver srcdir="${jar3}/out" verbose="false" destdir="${jar3}/out" version="1.4"/>
	
	<echo message = "********************************* weaving jars ${jar4}"/>
	<retroweaver srcdir="${jar4}/out" verbose="false" destdir="${jar4}/out" version="1.4"/>

	<echo message = "********************************* weaving ended"/>

	<delete file="${jar1}.jar" />
	<delete file="${jar2}.jar" />
	<delete file="${jar3}.jar" />
	<delete file="${jar4}.jar" />
	
	<jar jarfile="${jar1}.jar" basedir="${jar1}/out" update="true" manifest="${jar1}/out/META-INF/MANIFEST.MF" />
	<jar jarfile="${jar2}.jar" basedir="${jar2}/out" update="true" manifest="${jar2}/out/META-INF/MANIFEST.MF" />
	<jar jarfile="${jar3}.jar" basedir="${jar3}/out" update="true" manifest="${jar3}/out/META-INF/MANIFEST.MF" />
	<jar jarfile="${jar4}.jar" basedir="${jar4}/out" update="true" manifest="${jar4}/out/META-INF/MANIFEST.MF" />
	
	
</target>


<!-- ===================================================================== -->
<!-- Steps to do before running assemble. -->
<!-- ===================================================================== -->
<target name="preAssemble">
    <echo message="---------------------------------------------------------------- preAssemble ----------------------------------------------------------------"/>  
</target>

<!-- ===================================================================== -->
<!-- Steps to do after  running assemble. -->
<!-- ===================================================================== -->
<target name="postAssemble">
    <echo message="---------------------------------------------------------------- postAssemble ----------------------------------------------------------------"/>  
	
</target>

<!-- ===================================================================== -->
<!-- Steps to do after the build is done. -->
<!-- ===================================================================== -->
<target name="postBuild"> 
    <echo message="---------------------------------------------------------------- postBuild ----------------------------------------------------------------"/>  
    <echo message="Making jars in update site:"/>  
	<mkdir dir="${eclipseTmpResults}"/>
	<unzip src="${zipLocation}" dest="${eclipseTmpResults}">
	    <patternset>
	        <include name="**/*.*"/>
	    </patternset>
	</unzip>
	<jar jarfile="${destFeats}${fol0}.jar" basedir="${eclipseTmpResults}/eclipse${fol0}" update="true"  />
	<jar jarfile="${destFeats}${fol1}.jar" basedir="${eclipseTmpResults}/eclipse${fol1}" update="true" manifest="${eclipseTmpResults}/eclipse${fol1}/META-INF/MANIFEST.MF" />
	<jar jarfile="${destFeats}${fol2}.jar" basedir="${eclipseTmpResults}/eclipse${fol2}" update="true" manifest="${eclipseTmpResults}/eclipse${fol2}/META-INF/MANIFEST.MF" />
	<jar jarfile="${destFeats}${fol3}.jar" basedir="${eclipseTmpResults}/eclipse${fol3}" update="true" manifest="${eclipseTmpResults}/eclipse${fol3}/META-INF/MANIFEST.MF" />
	<jar jarfile="${destFeats}${fol4}.jar" basedir="${eclipseTmpResults}/eclipse${fol4}" update="true" manifest="${eclipseTmpResults}/eclipse${fol4}/META-INF/MANIFEST.MF" />
    <echo message="Finished making jars in update site!"/> 


	<!-- I also want to put it into my eclipse installation -->	
    <echo message="Putting into eclipse install:"/>  
	<copy todir="${EC_HOME}${fol0}"><fileset dir="${eclipseTmpResults}/eclipse${fol0}"/></copy>
	<copy todir="${EC_HOME}${fol1}"><fileset dir="${eclipseTmpResults}/eclipse${fol1}"/></copy>
	<copy todir="${EC_HOME}${fol2}"><fileset dir="${eclipseTmpResults}/eclipse${fol2}"/></copy>
	<copy todir="${EC_HOME}${fol3}"><fileset dir="${eclipseTmpResults}/eclipse${fol3}"/></copy>
	<copy todir="${EC_HOME}${fol4}"><fileset dir="${eclipseTmpResults}/eclipse${fol4}"/></copy>
    <echo message="Finished making installing!"/>

	<delete dir="${eclipseTmpResults}"/>
</target>

<!-- ===================================================================== -->
<!-- Steps to do to test the build results -->
<!-- ===================================================================== -->
<target name="test">
</target>

<!-- ===================================================================== -->
<!-- Steps to do to publish the build results -->
<!-- ===================================================================== -->
<target name="publish">
</target>

<!-- ===================================================================== -->
<!-- Default target                                                        -->
<!-- ===================================================================== -->
<target name="noDefault">
	<echo message="You must specify a target when invoking this file" />
</target>

</project>
