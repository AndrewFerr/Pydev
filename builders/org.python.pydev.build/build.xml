<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Dec 8, 2008 2:05:07 PM                                                        

     PyDev 
     Builds the PyDev feature
                   
     cwilliams                                                                
     ====================================================================== -->
<project name="PyDev" default="build">
	<description>
            Builds the PyDev feature
    </description>

	<property file="build_local.properties" />
	<!-- Set is.windows property IF the OS is from the Windows family -->
	<condition property="is.windows" value="true">
		<os family="windows" />
	</condition>
	<path id="svn.classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svn.classpath" />

	<!-- ================================= 
          target: build              
         ================================= -->
	<target name="doit" description="Builds the PyDev feature" depends="generate.build.properties,get.revision,generate.base">
		<java jar="${baseLocation}/plugins/${launcher.jar}" fork="true" failonerror="yes">
			<arg line="-application org.eclipse.ant.core.antRunner -buildfile ${baseLocation}/plugins/${pde.build.version}/scripts/build.xml -Dbuilder=${basedir} -Dbuild.revision=${build.revision} -nosplash" />
		</java>
	</target>

	<!-- ================================= 
          target: generate.build.properties              
         ================================= -->
	<target name="generate.build.properties" description="Takes in properties from build_local.properties and the command line overrides and generates a combined build.properties to use for the build">
		<echoproperties destfile="build.properties">
			<propertyset negate="true">
				<propertyref prefix="java." />
				<propertyref prefix="ant." />
				<propertyref prefix="awt." />
				<propertyref prefix="user." />
				<propertyref prefix="sun." />
			</propertyset>
		</echoproperties>
	</target>

	<!-- ================================= 
          target: clean.sources      
         ================================= -->
	<target name="clean.sources" depends="generate.build.properties" description="Clean up temp and build files">
		<delete failonerror="false">
			<fileset dir="${buildDirectory}" defaultexcludes="true">
				<include name="assemble.*" />
				<include name="finalFeaturesVersions.*" />
				<include name="finalPluginsVersions.*" />
				<include name="package.*" />
			</fileset>
		</delete>
		<delete dir="${buildDirectory}/${buildLabel}" failonerror="false" />
		<java jar="${vanilla.eclipse}/plugins/${launcher.jar}" fork="true" failonerror="false">
			<arg line="-application org.eclipse.ant.core.antRunner -buildfile ${baseLocation}/plugins/${pde.build.version}/scripts/build.xml -Dbuilder=${basedir} -nosplash clean" />
		</java>
		<delete dir="${buildDirectory}/features/org.eclipse.pde.build.container.feature" failonerror="false" />
		<delete dir="${p2.repo.dir}" failonerror="false" />
		<!-- Do an svn revert of the build directory -->
		<svn>
			<revert recurse="true" dir="${buildDirectory}" />
		</svn>
	</target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: clean
         - - - - - - - - - - - - - - - - - -->
    <target name="clean" depends="clean.sources">
        <delete dir="${baseLocation}" />
    </target>
    

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean.after                      
         - - - - - - - - - - - - - - - - - -->
	<target name="build" depends="doit" if="cleanAfter">
		<antcall target="clean" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: get.revision                      
         - - - - - - - - - - - - - - - - - -->
    <target name="get.revision" unless="build.revision">
        <echo message="Retrieving Subversion revision number" level="info" />
        <svn>
            <!-- Not using wcversion anymore because it'd get the revision of the externals too (and we only want the pydev revision)
            Note that the com plugin must use the same version of the org plugin (so, we use the http version for that)
            TODO: make the target a variable 
            -->
            <info target="${basedir}"/>
        </svn>
        <property name="build.revision" value="${svn.info.rev}" />
        <echo message="Revision: ${build.revision} - Target: ${basedir}" level="info" />
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: generate.base                      
         - - - - - - - - - - - - - - - - - -->
	<target name="generate.base" depends="copy.base.windows,copy.base" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: copy.base                      
         - - - - - - - - - - - - - - - - - -->
	<target name="copy.base" unless="is.windows">
		<!-- Copy over the original base eclipse to a new location.
			Have to use exec cp to retain permissions on *nix, Mac -->
		<exec executable="cp">
			<arg line="-R ${vanilla.eclipse} ${baseLocation}" />
		</exec>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: copy.base.windows                      
         - - - - - - - - - - - - - - - - - -->
	<target name="copy.base.windows" if="is.windows">
		<copy todir="${baseLocation}">
			<fileset dir="${vanilla.eclipse}" includes="**/*" defaultexcludes="false" />
		</copy>
	</target>
</project>
