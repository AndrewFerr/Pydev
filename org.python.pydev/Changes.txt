


what I want:

- simple "text completion" for locals without found definitions:
e.g. 
c.bla = 1
c.foo = 2
c. | triggers completion with bla,foo

- imports in local scope should be gotten
- pythonpath should be the same for project and lauch
- IPython should be integrated
- code completion: support zip imports
- code completion: reference to update completions for other project. Some kind of 'broadcast' could be used for these changes.
- code completion: some thread could check for completions from time to time to make sure they're up-to-date (check timestamp)/changes in structure.
- code completion: ClassC().| should bring suggestions for class 'ClassC'



After 0.9.3

- Integrated Scott Schleiser patches for the debugger (you won't see any 'implement me' anymore!).
- Integrated Heikki Toivonen patch for PyLint using the project pythonpath (only tested on windows). Please, keep an eye for errors and report them.
- Integrated Heikki Toivonen patch for indentation after '(', '[' and '{' (if the line ends with a comma).
- Some StackOverflow errors were removed from code completion.
- Keybindings added for Refactoring (powered by bycicle repair man) - check the <a href="faq.html">FAQ</a>.
- If your python executable is in the path, its complete path is found.    






Bug:
PyLint does not work if we have spaces in the path

After 0.9.1

- Integrated Scott Schleiser's editor patch (now on apply, it really applies new settings, without having to close the editor).
- Integrated Scott Schleiser's debugger patch - most 'implement me' and 'volunteers needed' were fixed.
- Code Formatting bugs solved (and unit-tests added).
- Code completion had unit-tests added and some minor bugs solved.
- New Content Assistants added. 
- Docstrings in national encodings should work now.
- from scbr import a, b... should work now.
- Decorators now can have custom colors.
- Numbers now can have custom colors.
- Matching brackets now highlighted.
- Minor bugs in other areas. 




Done in 0.9.1

Content assistant improvements:
- assign content assistant when assigned to variable strips the "get";
- move imports content assistant should be improved to move import closer to existant import and
not to top of file;
- Icons added to them;

Others:
- Ctrl+Shift+O: if no selection: Organizes all global imports from the file (sorts alphabetically);
- Ctrl+Shift+O: if some line selection: sorts alphabetically the lines selected;
- Ctrl+Shift+F: if no selection: Formats all code;
- Ctrl+Shift+F: if some line selection: Formats selected code;
- PyLint only blocks interface on "update results";
- the namespace in debug mode is not polluted anymore (Scott Schleiser provided the patch);
- The PYTHONPATH used for debug now should be the same used in run.
- Editor preferences

Code Completion:
- get parameters in code completion;
- builtins like ' ', {}, [] should bring correct suggestions;
- relative imports;
- other bug-fixes;














org.python.pydev

Since 0.3

New features:

- Added team file extensions for .py & .pyc
- Added "Source" menu to the editor: comment/goto methods implemented by fabioz
- Added Python nature, and nature icon. Nature get automatically added to any project
that opens a python editor.
- Added Python properties to projects that have Python nature
- Editor now has a python icon. Icon is ugly, help!
- .pyc files are filtered out in the resource view
- Parsing now happens either immediately on return, or a second after input
This makes error notifications nicer and more predictable
- New double-clicking strategy, copied from Java
- Moved debug preferences into main plugin. We need them for import paths parsing
- Hyperlinks on simple imports now work. For them to find system includes, you'll need to
set up the python interpreter in the preferences.
	active hyperlinks are:
		[imports] import sys: you can click on sys, and sys.py will open
		[local function calls]: functions defined in the same file
		[class constructors]: a = SomeClass() takes you to class definition
		[self.method calls]: self.method_name works if method is defined in the same file
- When you are editing in the tab mode, paste will replace spaces with tabs
- tabs/spaces conversion only takes place inside code, not inside comments
- IDLE like colors for text

Bug fixes:
- Moved parsing so that all pydev parsers use single thread
-








